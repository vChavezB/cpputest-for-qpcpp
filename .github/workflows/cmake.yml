name: CMake

on:
  push:
    branches: [ ci ]
  pull_request:
    branches: [ ci ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install cpputest
      run: sudo apt install -y cpputest
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}     
  zephyr:
    name: Zephyr posix
    needs: build
    env:
      ZEPHYR_VERSION: 3.2.0
      ZEPHYR_SDK_INSTALL_DIR: /opt/toolchains/zephyr-sdk-0.16.0/
    runs-on: ubuntu-20.04
    container: 
      image:  zephyrprojectrtos/ci:v0.26.0
      options: --user root
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: CPPU Test dependencies
      run: apt-get update && apt install -y cpputest pkg-config gcc-multilib g++-multilib
    - name: Clone Zephyr RTOS
      run: |
            west init -m https://github.com/zephyrproject-rtos/zephyr --mr v${ZEPHYR_VERSION} zephyr \
            && cd zephyr \
            && west update
    - name: build
      run: | 
            mkdir build \
            && cd zephyr \
            && west build ../examples/zephyr_posix --build-dir ../build --pristine --board native_posix_64 \
    - uses: actions/upload-artifact@master
      with:
        name: zephyr_bin
        path: build/zephyr/zephyr.exe
  test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@master

    - uses: actions/download-artifact@master
      with:
        name: zephyr_bin
        path: build/zephyr/zephyr.exe

    - run: ./build/zephyr/zephyr.exe

